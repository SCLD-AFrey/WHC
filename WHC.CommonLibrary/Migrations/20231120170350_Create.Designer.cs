// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WHC.CommonLibrary.DataConn;

#nullable disable

namespace WHC.CommonLibrary.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20231120170350_Create")]
    partial class Create
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("WHC.CommonLibrary.Models.Address.Address", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Country")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetAddress1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetAddress2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Oid");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("WHC.CommonLibrary.Models.Address.EmailAddress", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("AddressType")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserOid")
                        .HasColumnType("INTEGER");

                    b.HasKey("Oid");

                    b.HasIndex("UserOid");

                    b.ToTable("EmailAddress");
                });

            modelBuilder.Entity("WHC.CommonLibrary.Models.Address.NonUSAddress", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Country")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetAddress1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetAddress2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Oid");

                    b.ToTable("NonUSAddress");
                });

            modelBuilder.Entity("WHC.CommonLibrary.Models.Address.PhoneNumber", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Country")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserOid")
                        .HasColumnType("INTEGER");

                    b.HasKey("Oid");

                    b.HasIndex("UserOid");

                    b.ToTable("PhoneNumber");
                });

            modelBuilder.Entity("WHC.CommonLibrary.Models.Address.UsAddress", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Country")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StreetAddress1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetAddress2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserOid")
                        .HasColumnType("INTEGER");

                    b.HasKey("Oid");

                    b.HasIndex("UserOid");

                    b.ToTable("UsAddress");
                });

            modelBuilder.Entity("WHC.CommonLibrary.Models.Login.LoginAttempt", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Attempted")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserOid")
                        .HasColumnType("INTEGER");

                    b.HasKey("Oid");

                    b.HasIndex("UserOid");

                    b.ToTable("LoginAttempt");
                });

            modelBuilder.Entity("WHC.CommonLibrary.Models.User", b =>
                {
                    b.Property<int>("UserOid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserOid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WHC.CommonLibrary.Models.UserInfo.Credential", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserOid")
                        .HasColumnType("INTEGER");

                    b.HasKey("Oid");

                    b.HasIndex("UserOid");

                    b.ToTable("Credential");
                });

            modelBuilder.Entity("WHC.CommonLibrary.Models.UserInfo.Role", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserOid")
                        .HasColumnType("INTEGER");

                    b.HasKey("Oid");

                    b.HasIndex("UserOid");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("WHC.CommonLibrary.Models.Address.EmailAddress", b =>
                {
                    b.HasOne("WHC.CommonLibrary.Models.User", null)
                        .WithMany("EmailAddresses")
                        .HasForeignKey("UserOid");
                });

            modelBuilder.Entity("WHC.CommonLibrary.Models.Address.PhoneNumber", b =>
                {
                    b.HasOne("WHC.CommonLibrary.Models.User", null)
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("UserOid");
                });

            modelBuilder.Entity("WHC.CommonLibrary.Models.Address.UsAddress", b =>
                {
                    b.HasOne("WHC.CommonLibrary.Models.User", null)
                        .WithMany("Addresses")
                        .HasForeignKey("UserOid");
                });

            modelBuilder.Entity("WHC.CommonLibrary.Models.Login.LoginAttempt", b =>
                {
                    b.HasOne("WHC.CommonLibrary.Models.User", "User")
                        .WithMany("LoginAttempts")
                        .HasForeignKey("UserOid");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WHC.CommonLibrary.Models.UserInfo.Credential", b =>
                {
                    b.HasOne("WHC.CommonLibrary.Models.User", null)
                        .WithMany("Credentials")
                        .HasForeignKey("UserOid");
                });

            modelBuilder.Entity("WHC.CommonLibrary.Models.UserInfo.Role", b =>
                {
                    b.HasOne("WHC.CommonLibrary.Models.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserOid");
                });

            modelBuilder.Entity("WHC.CommonLibrary.Models.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Credentials");

                    b.Navigation("EmailAddresses");

                    b.Navigation("LoginAttempts");

                    b.Navigation("PhoneNumbers");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
